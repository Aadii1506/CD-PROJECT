Grammar

    0 $accept: start $end

    1 start: scope

    2 scope: statement scope
    3      | ε

    4 statement: LEFTCUR scope RIGHTCUR
    5          | operation SEMI
    6          | declaration SEMI
    7          | instantiation SEMI
    8          | assignment SEMI
    9          | print SEMI

   10 declaration: LET ID

   11 instantiation: LET ID ASSIGN operation

   12 assignment: ID ASSIGN operation

   13 operation: operation AND operation
   14          | operation OR operation
   15          | operation XOR operation
   16          | LEFTPAR operation RIGHTPAR
   17          | NOT operation
   18          | ID
   19          | BOOLEAN

   20 print: YELL LEFTPAR STRING RIGHTPAR
   21      | YELL LEFTPAR STRING COMMA STRING RIGHTPAR
   22      | YELL LEFTPAR STRING COMMA operation RIGHTPAR
   23      | YELL LEFTPAR STRING COMMA STRING COMMA operation RIGHTPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    BOOLEAN <booleanVal> (258) 19
    ID <symbol> (259) 10 11 12 18
    STRING <stringVal> (260) 20 21 22 23
    SEMI (261) 5 6 7 8 9
    AND (262) 13
    OR (263) 14
    XOR (264) 15
    NOT (265) 17
    LEFTPAR (266) 16 20 21 22 23
    RIGHTPAR (267) 16 20 21 22 23
    LET (268) 10 11
    ASSIGN (269) 11 12
    LEFTCUR (270) 4
    RIGHTCUR (271) 4
    YELL (272) 20 21 22 23
    COMMA (273) 21 22 23


Nonterminals, with rules where they appear

    $accept (19)
        on left: 0
    start (20)
        on left: 1
        on right: 0
    scope (21)
        on left: 2 3
        on right: 1 2 4
    statement (22)
        on left: 4 5 6 7 8 9
        on right: 2
    declaration (23)
        on left: 10
        on right: 6
    instantiation (24)
        on left: 11
        on right: 7
    assignment (25)
        on left: 12
        on right: 8
    operation <symbol> (26)
        on left: 13 14 15 16 17 18 19
        on right: 5 11 12 13 14 15 16 17 22 23
    print (27)
        on left: 20 21 22 23
        on right: 9


State 0

    0 $accept: • start $end

    BOOLEAN  shift, and go to state 1
    ID       shift, and go to state 2
    NOT      shift, and go to state 3
    LEFTPAR  shift, and go to state 4
    LET      shift, and go to state 5
    LEFTCUR  shift, and go to state 6
    YELL     shift, and go to state 7

    $default  reduce using rule 3 (scope)

    start          go to state 8
    scope          go to state 9
    statement      go to state 10
    declaration    go to state 11
    instantiation  go to state 12
    assignment     go to state 13
    operation      go to state 14
    print          go to state 15


State 1

   19 operation: BOOLEAN •

    $default  reduce using rule 19 (operation)


State 2

   12 assignment: ID • ASSIGN operation
   18 operation: ID •

    ASSIGN  shift, and go to state 16

    $default  reduce using rule 18 (operation)


State 3

   17 operation: NOT • operation

    BOOLEAN  shift, and go to state 1
    ID       shift, and go to state 17
    NOT      shift, and go to state 3
    LEFTPAR  shift, and go to state 4

    operation  go to state 18


State 4

   16 operation: LEFTPAR • operation RIGHTPAR

    BOOLEAN  shift, and go to state 1
    ID       shift, and go to state 17
    NOT      shift, and go to state 3
    LEFTPAR  shift, and go to state 4

    operation  go to state 19


State 5

   10 declaration: LET • ID
   11 instantiation: LET • ID ASSIGN operation

    ID  shift, and go to state 20


State 6

    4 statement: LEFTCUR • scope RIGHTCUR

    BOOLEAN  shift, and go to state 1
    ID       shift, and go to state 2
    NOT      shift, and go to state 3
    LEFTPAR  shift, and go to state 4
    LET      shift, and go to state 5
    LEFTCUR  shift, and go to state 6
    YELL     shift, and go to state 7

    $default  reduce using rule 3 (scope)

    scope          go to state 21
    statement      go to state 10
    declaration    go to state 11
    instantiation  go to state 12
    assignment     go to state 13
    operation      go to state 14
    print          go to state 15


State 7

   20 print: YELL • LEFTPAR STRING RIGHTPAR
   21      | YELL • LEFTPAR STRING COMMA STRING RIGHTPAR
   22      | YELL • LEFTPAR STRING COMMA operation RIGHTPAR
   23      | YELL • LEFTPAR STRING COMMA STRING COMMA operation RIGHTPAR

    LEFTPAR  shift, and go to state 22


State 8

    0 $accept: start • $end

    $end  shift, and go to state 23


State 9

    1 start: scope •

    $default  reduce using rule 1 (start)


State 10

    2 scope: statement • scope

    BOOLEAN  shift, and go to state 1
    ID       shift, and go to state 2
    NOT      shift, and go to state 3
    LEFTPAR  shift, and go to state 4
    LET      shift, and go to state 5
    LEFTCUR  shift, and go to state 6
    YELL     shift, and go to state 7

    $default  reduce using rule 3 (scope)

    scope          go to state 24
    statement      go to state 10
    declaration    go to state 11
    instantiation  go to state 12
    assignment     go to state 13
    operation      go to state 14
    print          go to state 15


State 11

    6 statement: declaration • SEMI

    SEMI  shift, and go to state 25


State 12

    7 statement: instantiation • SEMI

    SEMI  shift, and go to state 26


State 13

    8 statement: assignment • SEMI

    SEMI  shift, and go to state 27


State 14

    5 statement: operation • SEMI
   13 operation: operation • AND operation
   14          | operation • OR operation
   15          | operation • XOR operation

    SEMI  shift, and go to state 28
    AND   shift, and go to state 29
    OR    shift, and go to state 30
    XOR   shift, and go to state 31


State 15

    9 statement: print • SEMI

    SEMI  shift, and go to state 32


State 16

   12 assignment: ID ASSIGN • operation

    BOOLEAN  shift, and go to state 1
    ID       shift, and go to state 17
    NOT      shift, and go to state 3
    LEFTPAR  shift, and go to state 4

    operation  go to state 33


State 17

   18 operation: ID •

    $default  reduce using rule 18 (operation)


State 18

   13 operation: operation • AND operation
   14          | operation • OR operation
   15          | operation • XOR operation
   17          | NOT operation •

    $default  reduce using rule 17 (operation)


State 19

   13 operation: operation • AND operation
   14          | operation • OR operation
   15          | operation • XOR operation
   16          | LEFTPAR operation • RIGHTPAR

    AND       shift, and go to state 29
    OR        shift, and go to state 30
    XOR       shift, and go to state 31
    RIGHTPAR  shift, and go to state 34


State 20

   10 declaration: LET ID •
   11 instantiation: LET ID • ASSIGN operation

    ASSIGN  shift, and go to state 35

    $default  reduce using rule 10 (declaration)


State 21

    4 statement: LEFTCUR scope • RIGHTCUR

    RIGHTCUR  shift, and go to state 36


State 22

   20 print: YELL LEFTPAR • STRING RIGHTPAR
   21      | YELL LEFTPAR • STRING COMMA STRING RIGHTPAR
   22      | YELL LEFTPAR • STRING COMMA operation RIGHTPAR
   23      | YELL LEFTPAR • STRING COMMA STRING COMMA operation RIGHTPAR

    STRING  shift, and go to state 37


State 23

    0 $accept: start $end •

    $default  accept


State 24

    2 scope: statement scope •

    $default  reduce using rule 2 (scope)


State 25

    6 statement: declaration SEMI •

    $default  reduce using rule 6 (statement)


State 26

    7 statement: instantiation SEMI •

    $default  reduce using rule 7 (statement)


State 27

    8 statement: assignment SEMI •

    $default  reduce using rule 8 (statement)


State 28

    5 statement: operation SEMI •

    $default  reduce using rule 5 (statement)


State 29

   13 operation: operation AND • operation

    BOOLEAN  shift, and go to state 1
    ID       shift, and go to state 17
    NOT      shift, and go to state 3
    LEFTPAR  shift, and go to state 4

    operation  go to state 38


State 30

   14 operation: operation OR • operation

    BOOLEAN  shift, and go to state 1
    ID       shift, and go to state 17
    NOT      shift, and go to state 3
    LEFTPAR  shift, and go to state 4

    operation  go to state 39


State 31

   15 operation: operation XOR • operation

    BOOLEAN  shift, and go to state 1
    ID       shift, and go to state 17
    NOT      shift, and go to state 3
    LEFTPAR  shift, and go to state 4

    operation  go to state 40


State 32

    9 statement: print SEMI •

    $default  reduce using rule 9 (statement)


State 33

   12 assignment: ID ASSIGN operation •
   13 operation: operation • AND operation
   14          | operation • OR operation
   15          | operation • XOR operation

    AND  shift, and go to state 29
    OR   shift, and go to state 30
    XOR  shift, and go to state 31

    $default  reduce using rule 12 (assignment)


State 34

   16 operation: LEFTPAR operation RIGHTPAR •

    $default  reduce using rule 16 (operation)


State 35

   11 instantiation: LET ID ASSIGN • operation

    BOOLEAN  shift, and go to state 1
    ID       shift, and go to state 17
    NOT      shift, and go to state 3
    LEFTPAR  shift, and go to state 4

    operation  go to state 41


State 36

    4 statement: LEFTCUR scope RIGHTCUR •

    $default  reduce using rule 4 (statement)


State 37

   20 print: YELL LEFTPAR STRING • RIGHTPAR
   21      | YELL LEFTPAR STRING • COMMA STRING RIGHTPAR
   22      | YELL LEFTPAR STRING • COMMA operation RIGHTPAR
   23      | YELL LEFTPAR STRING • COMMA STRING COMMA operation RIGHTPAR

    RIGHTPAR  shift, and go to state 42
    COMMA     shift, and go to state 43


State 38

   13 operation: operation • AND operation
   13          | operation AND operation •
   14          | operation • OR operation
   15          | operation • XOR operation

    XOR  shift, and go to state 31

    $default  reduce using rule 13 (operation)


State 39

   13 operation: operation • AND operation
   14          | operation • OR operation
   14          | operation OR operation •
   15          | operation • XOR operation

    AND  shift, and go to state 29
    XOR  shift, and go to state 31

    $default  reduce using rule 14 (operation)


State 40

   13 operation: operation • AND operation
   14          | operation • OR operation
   15          | operation • XOR operation
   15          | operation XOR operation •

    $default  reduce using rule 15 (operation)


State 41

   11 instantiation: LET ID ASSIGN operation •
   13 operation: operation • AND operation
   14          | operation • OR operation
   15          | operation • XOR operation

    AND  shift, and go to state 29
    OR   shift, and go to state 30
    XOR  shift, and go to state 31

    $default  reduce using rule 11 (instantiation)


State 42

   20 print: YELL LEFTPAR STRING RIGHTPAR •

    $default  reduce using rule 20 (print)


State 43

   21 print: YELL LEFTPAR STRING COMMA • STRING RIGHTPAR
   22      | YELL LEFTPAR STRING COMMA • operation RIGHTPAR
   23      | YELL LEFTPAR STRING COMMA • STRING COMMA operation RIGHTPAR

    BOOLEAN  shift, and go to state 1
    ID       shift, and go to state 17
    STRING   shift, and go to state 44
    NOT      shift, and go to state 3
    LEFTPAR  shift, and go to state 4

    operation  go to state 45


State 44

   21 print: YELL LEFTPAR STRING COMMA STRING • RIGHTPAR
   23      | YELL LEFTPAR STRING COMMA STRING • COMMA operation RIGHTPAR

    RIGHTPAR  shift, and go to state 46
    COMMA     shift, and go to state 47


State 45

   13 operation: operation • AND operation
   14          | operation • OR operation
   15          | operation • XOR operation
   22 print: YELL LEFTPAR STRING COMMA operation • RIGHTPAR

    AND       shift, and go to state 29
    OR        shift, and go to state 30
    XOR       shift, and go to state 31
    RIGHTPAR  shift, and go to state 48


State 46

   21 print: YELL LEFTPAR STRING COMMA STRING RIGHTPAR •

    $default  reduce using rule 21 (print)


State 47

   23 print: YELL LEFTPAR STRING COMMA STRING COMMA • operation RIGHTPAR

    BOOLEAN  shift, and go to state 1
    ID       shift, and go to state 17
    NOT      shift, and go to state 3
    LEFTPAR  shift, and go to state 4

    operation  go to state 49


State 48

   22 print: YELL LEFTPAR STRING COMMA operation RIGHTPAR •

    $default  reduce using rule 22 (print)


State 49

   13 operation: operation • AND operation
   14          | operation • OR operation
   15          | operation • XOR operation
   23 print: YELL LEFTPAR STRING COMMA STRING COMMA operation • RIGHTPAR

    AND       shift, and go to state 29
    OR        shift, and go to state 30
    XOR       shift, and go to state 31
    RIGHTPAR  shift, and go to state 50


State 50

   23 print: YELL LEFTPAR STRING COMMA STRING COMMA operation RIGHTPAR •

    $default  reduce using rule 23 (print)
